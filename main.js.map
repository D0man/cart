{"version":3,"sources":["webpack://gogtask/./src/scripts/data.ts","webpack://gogtask/./src/scripts/cart.ts"],"names":["games","id","img","title","isOwned","price","promotionValue","isCart","cart","gamesListElement","document","querySelector","dropdown","priceElement","countElements","querySelectorAll","clearButton","cartButton","promotion","item","game","push","appendChild","createElement","classList","add","innerHTML","createOwnedTag","createCartTag","loadGames","clearCart","isRerender","Array","from","forEach","tag","remove","setCount","setPrice","removeChild","addEventListener","event","priceButton","target","contains","cartTag","closest","textContent","prepend","addedGame","find","Number","getAttribute","renderCartElements","addItemToCart","prices","sum","reduce","acc","cur","count","element","String","renderCartElement","length","toggle","removeButton","filter","cartTagHolder","parentElement"],"mappings":"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","file":"main.js","sourcesContent":["export interface GameData {\r\n    id:number|string,\r\n    img: string,\r\n    title: string,\r\n    isOwned: boolean,\r\n    price: number,\r\n    promotionValue: null|number\r\n    isCart:boolean;\r\n}\r\n\r\n\r\nexport const games: GameData[] = [\r\n    {\r\n        id: 0,\r\n        img: '/src/assets/images/oddworld.webp',\r\n        title: `Oddworld: Stranger's wrath`,\r\n        isOwned: false,\r\n        price: 9.99,\r\n        promotionValue: 50,\r\n        isCart: false,\r\n\r\n    },\r\n    {\r\n        id:1,\r\n        img: '/src/assets/images/deponia.webp',\r\n        title: `chaos on deponia`,\r\n        isOwned: true,\r\n        price: 9.99,\r\n        promotionValue: 50,\r\n        isCart: false,\r\n    },\r\n    {\r\n        id:2,\r\n        img: '/src/assets/images/setllers.webp',\r\n        title: `The settlers 2: gold edition`,\r\n        isOwned: false,\r\n        price: 5.99,\r\n        promotionValue: null,\r\n        isCart: true,\r\n    },\r\n    {\r\n        id:3,\r\n        img: '/src/assets/images/neverwinter.webp',\r\n        title: `neverwinter nights`,\r\n        isOwned: false,\r\n        price: 9.99,\r\n        promotionValue: 50,\r\n        isCart: false,\r\n    },\r\n    {\r\n        id:4,\r\n        img: '/src/assets/images/assasins.webp',\r\n        title: `assassin’s creed: director’s cut`,\r\n        isOwned: false,\r\n        price: 9.99,\r\n        promotionValue: null,\r\n        isCart: true,\r\n    }\r\n]","import { GameData, games } from './data';\r\n\r\nlet cart: GameData[] = []\r\nconst gamesListElement = document.querySelector('.js-games')\r\nconst dropdown = document.querySelector('.js-dropdown')\r\nconst priceElement = document.querySelector('.js-price')\r\nconst countElements = document.querySelectorAll('.js-count');\r\nconst clearButton = document.querySelector('.js-clear')\r\nconst cartButton = document.querySelector('.js-cart-button')\r\n\r\n\r\nconst loadGames = () => {\r\n    const createPromotionTag = (promotion: number|null) => promotion ? `<div class=\"game__tag game__tag--promotion\">-${promotion}%</div>` : ''\r\n    const createOwnedTag = (isOwned: boolean) => isOwned ? `<div class=\"game__tag game__tag--owned\">Owned</div>` : ''\r\n    const createCartTag = (isCart: boolean) => isCart ? `<div class=\"game__tag game__tag--cart\">In cart</div>` : ''\r\n\r\n    const createItem = (id: number|string, img:string, title: string, price: number, promotionValue:number|null, isCart:boolean, isOwned: boolean): HTMLLIElement => {\r\n    const item = document.createElement('li')\r\n        item.classList.add('game')\r\n        item.innerHTML =`\r\n            <div class=\"game__image\">\r\n            <img src=\"${img}\" alt=\"${title}\">\r\n            </div>\r\n            <div class=\"game__info js-info\">\r\n            <div class=\"game__title\">${title}</div>\r\n            ${createOwnedTag(isOwned)}\r\n            ${createCartTag(isCart)}\r\n            <button class=\"game__tag game__tag--price\" data-id=${id}>$${price}</button>\r\n            ${createPromotionTag(promotionValue)}\r\n            </div>`\r\n    return item\r\n    }\r\n\r\n    for (const game of games) {\r\n        if(game.isCart) {\r\n            cart.push(game) \r\n        }\r\n        gamesListElement?.appendChild(createItem(game.id, game.img, game.title, game.price, game.promotionValue, game.isCart, game.isOwned));\r\n    }\r\n}\r\nloadGames()\r\n\r\nconst clearCart = (isRerender: boolean) => {\r\n    if (!isRerender) {\r\n        cart = []\r\n        Array.from(document.querySelectorAll('.game__tag--cart')).forEach(tag => tag.remove())\r\n        setCount(0)\r\n        setPrice([])\r\n    }\r\n    if (dropdown){\r\n        const gamesInCart = Array.from(dropdown.querySelectorAll('.cart-dropdown__item'))\r\n        gamesInCart.forEach(game => dropdown.removeChild(game))\r\n    }\r\n   \r\n}\r\n\r\nconst addItemToCart = (event: any) => {\r\n    const priceButton = event.target as HTMLButtonElement\r\n\r\n    if( priceButton.classList.contains('game__tag--price')){\r\n        const cartTag = document.createElement('div')\r\n        const title = priceButton.closest('.game__title')\r\n        cartTag.textContent = 'in cart'\r\n        cartTag.classList.add('game__tag', 'game__tag--cart')\r\n        priceButton.closest('.js-info')?.prepend(cartTag)\r\n        const addedGame = games.find(game => game.id === Number(priceButton.getAttribute('data-id')))\r\n        if (addedGame) {\r\n            cart.push(addedGame)\r\n        }\r\n        clearCart(true)\r\n        renderCartElements(cart)\r\n    }\r\n\r\n   \r\n  }\r\n\r\nconst removeItemFromCart = (event: any) => {\r\n    const removeButton = event.target as HTMLButtonElement\r\n    const id = Number(removeButton.getAttribute('data-id'))\r\n    if( removeButton.classList.contains('js-remove')){\r\n        cart = cart.filter(game => game.id !== id)\r\n        const cartTagHolder = document.querySelector(`.game__tag[data-id=\"${id}\"]`)?.parentElement\r\n        const cartTag = cartTagHolder?.querySelector('.game__tag--cart')\r\n        if (cartTag){\r\n            cartTagHolder?.removeChild(cartTag)\r\n        }\r\n        clearCart(true)\r\n        renderCartElements(cart)\r\n    } \r\n}\r\n\r\ngamesListElement?.addEventListener('click', (event) => addItemToCart(event))\r\n\r\nconst renderCartElement = (game: GameData): Node => {\r\n    const item = document.createElement('div');\r\n    item.classList.add('cart-dropdown__item');\r\n    item.innerHTML =`\r\n    <img class=\"cart-dropdown__image\" src=\"${game.img}\" alt=\"assasin\">\r\n    <div class=\"cart-dropdown__title\">${game.title}</div>\r\n    <div class=\"cart-dropdown__item-price\">$${game.price}</div>\r\n    <span class=\"cart-dropdown__remove js-remove\" data-id=${game.id}>Remove</span>`\r\n    return item\r\n}\r\n\r\nconst setPrice = (prices: GameData[]) => {\r\n    const sum = prices.reduce((acc,cur) =>cur.price + acc ,0)\r\n    if(priceElement){\r\n        priceElement.textContent = '$' + sum\r\n    }\r\n}\r\n\r\nconst setCount = (count: number) => {\r\n    countElements.forEach(element => element.textContent = String(count))\r\n}\r\n\r\nconst renderCartElements = (cart: GameData[]) => {\r\n\r\n    cart.forEach(game => {\r\n     return dropdown?.appendChild(renderCartElement(game))\r\n    })\r\n    setPrice(cart)\r\n    setCount(cart.length)\r\n    \r\n}\r\nrenderCartElements(cart)\r\n\r\nclearButton?.addEventListener('click', () => clearCart(false))\r\n\r\nconst toggleCart = () => {\r\n    dropdown?.classList.toggle('cart-dropdown--active')\r\n}\r\n\r\ncartButton?.addEventListener('click', toggleCart)\r\ndropdown?.addEventListener('click', removeItemFromCart)"],"sourceRoot":""}